'CR1000X program automatically generated by RWISPrograms.py on 08/01/23 for Test2 
'Generator: Cody Oppermann 

'Instruments included: 
'Legacy thermometer (HMP45, Rotronic, EE181), 05103 or Legacy Alpine Anemometer, CS125, TE525, LI200X, SnowVue, 107, Vaisala DSC/DST, CC640, SW12V Light(s)
'Output Data Tables: MesoAtmo, MesoRoad, Daily, PresentWx

'Declare Constants:
Const Snow_initial_dist_in = 0
Const TE525_exist = 1
Const solar_exist = 1

'Declare Public Variables
'Main Variables
Public Batt_volt
Public Air_Temp_f
Public RH_percent
Public TdC
Public TdF
Public TwC
Public TwF
Public Wind_Dir_deg
Public Wind_Speed_mph
Public Two_Min_Wind_Dir_deg
Public Two_Min_Wind_Speed_mph
Public Precip As String *3
Public Precip_Intensity As String *8
Public Solar_w
Public Ground_18in_Temp_f
Public SnowfallRate
Public Rain
Public Snow_Depth_in
Public Light As String *3

'SnowVue Variables
Public TCDT
Public SnowVue(2)
Alias SnowVue(1) = dist_raw_in
Alias SnowVue(2) = SnowVueQuality

'CS125 Variables
Dim CheckVal As Long, TempString As String
Dim NBytesReturned, OutString As String * 40
Public CS125_In As String * 200
Public cs125out(27) As String
Alias cs125out(1)=messID
Alias cs125out(2)=sensorID
Alias cs125out(3)=sysStatus
Alias cs125out(4)=messInterval
Alias cs125out(5)=vis_m_string
Alias cs125out(6)=visUnits
Alias cs125out(7)=avgDuration
Alias cs125out(8)=userAlarm_1
Alias cs125out(9)=userAlarm_2
Alias cs125out(10)=Emitter_failure
Alias cs125out(11)=Emitter_lens_dirty
Alias cs125out(12)=Emitter_temp_error
Alias cs125out(13)=Detector_lens_dirty
Alias cs125out(14)=Detector_temp_error
Alias cs125out(15)=Detector_saturated
Alias cs125out(16)=Hood_temp_error
Alias cs125out(17)=Ext_temp_error
Alias cs125out(18)=Signature_error
Alias cs125out(19)=Flash_read_error
Alias cs125out(20)=Flash_write_error
Alias cs125out(21)=Particle_limit_error
Alias cs125out(22)=Particle_count
Alias cs125out(23)=Intensity_mm_hr
Alias cs125out(24)=SYNOPCode
Alias cs125out(25)=PresentWeather
Alias cs125out(26)=CS125Temp
Alias cs125out(27)=CS125RH

Public visibility_m
Public visibility_mi

'DSC/DST Variables
Public dstinputvolt, dstinputvoltfilter As String
Public dsthardwarestatus, dsthardwarestatusfilter As String
Public dscsurfstatus,dscsurfstatusfilter As String
Public dsclevelofgrip,dsclevelofgripfilter As String
Public dschardwarestatus, dschardwarestatusfilter As String
Public dscamtofwater,dscamtofwaterfilter As String
Public dscamtofice,dscamtoficefilter As String
Public dscamtofsnow,dscamtofsnowfilter As String
Public dstAirTemp_F
Public dstDewPt_F
Public dstRoadTemp_F
Public dscRoadStatus As String
Public dscraw As String * 400
Public dscpoll As String
Public dstairtemp,dstairtempfilter As String
Public dstrh,dstrhfilter As String
Public dstdewpoint,dstdewpointfilter As String
Public dstsurfacetemp,dstsurfacetempfilter As String
Public dsccheck

'Declare Private Variables
Dim AirTC_9
Dim SPkPa_6
Dim Twg_7
Dim Twpg_8
Dim Vpg_9
Dim Vp_10
Dim SVp_11
Dim Twch_12
Dim VpgVpd_13
Dim Top_14
Dim Bottom_15
Dim N_17

'Define Units
Units Air_Temp_f=Deg F
Units RH_percent=%
Units Wind_Speed_mph=miles/hour
Units Wind_Dir_deg=Degrees
Units Snow_Depth_in=inches
Units Solar_w=W/m²2
Units Batt_volt=Volts
Units visibility_mi=miles
Units TdF=Deg F
Units TwF=Deg F
Units SnowfallRate=in/hr
Units Rain=inches
Units Ground_18in_Temp_f=Deg F
Units dstAirTemp_F=Deg F
Units dstrh=%
Units dstDewPt_F=Deg F
Units dstinputvolt=Volts
Units dstRoadTemp_F=Deg F

'Define Data Tables
'MesoAtmo table
DataTable (MesoAtmo,1,1008)
  DataInterval (0,10,min,10)
  Sample (1,Air_Temp_f,FP2)
  Sample (1,RH_percent,FP2)
  Sample (1,Two_Min_Wind_Dir_deg,FP2)
  Sample (1,Two_Min_Wind_Speed_mph,FP2)
  Maximum (1,Wind_Speed_mph,FP2,False,True)
  Sample (1,Precip,String)
  Sample (1,Precip_Intensity,String)
  Average (1,Snow_Depth_in,FP2,False)
  Average (1,Solar_w,FP2,False)
  Sample (1,Batt_volt,FP2)
  Sample (1,visibility_mi,FP2)
  Sample (1,TdF,FP2)
  Sample (1,TwF,FP2)
  Sample (1,SnowfallRate,FP2)
  Totalize (1,Rain,FP2,False)
EndTable

'MesoRoad table
DataTable (MesoRoad,1,1008)
  DataInterval (0,10,min,10)
  Sample (1,Ground_18in_Temp_f,FP2)
  Sample (1,dstAirTemp_F,FP2)
  Sample (1,dstrh,FP2)
  Sample (1,dstDewPt_F,FP2)
  Sample (1,dstinputvolt,FP2)
  Sample (1,dstRoadTemp_F,FP2)
  Sample (1,dsthardwarestatus,FP2)
  Sample (1,dscsurfstatus,FP2)
  Sample (1,dscRoadStatus,String)
  Sample (1,dsclevelofgrip,FP2)
  Sample (1,dschardwarestatus,FP2)
  Sample (1,dscamtofwater,FP2)
  Sample (1,dscamtofice,FP2)
  Sample (1,dscamtofsnow,FP2)
EndTable

'Daily table
DataTable (Daily,1,-1)
  DataInterval (0,1440,min,10)
  Minimum (1,Batt_Volt,FP2,False,True)
  Maximum (1,Air_Temp_f,FP2,False,True)
  Minimum (1,Air_Temp_f,FP2,False,True)
  Maximum (1,RH_percent,FP2,False,True)
  Minimum (1,RH_percent,FP2,False,True)
  Maximum (1,TdF,FP2,False,True)
  Minimum (1,TdF,FP2,False,True)
  Maximum (1,TwF,FP2,False,True)
  Minimum (1,TwF,FP2,False,True)
  Average (1,Wind_Speed_mph,FP2,False)
  Maximum (1,Wind_Speed_mph,FP2,False,True)
  Average (1,Ground_18in_Temp_f,FP2,False)
  Totalize (1,Solar_w,IEEE4,False)
EndTable

'PresentWx table
DataTable (PresentWx,1,1008)
  DataInterval (0,10,min,10)
  Sample (1,visibility_mi,FP2)
  Sample (1,Particle_count,FP2)
  Sample (1,Intensity_mm_hr,FP2)
  Sample (1,SYNOPCode,FP2)
  Sample (1,PresentWeather,String)
  Sample (1,sysStatus,FP2)
  Sample (1,Emitter_failure,FP2)
  Sample (1,Emitter_lens_dirty,FP2)
  Sample (1,Emitter_temp_error,FP2)
  Sample (1,Detector_lens_dirty,FP2)
  Sample (1,Detector_temp_error,FP2)
  Sample (1,Detector_saturated,FP2)
  Sample (1,Hood_temp_error,FP2)
  Sample (1,Ext_temp_error,FP2)
  Sample (1,Signature_error,FP2)
  Sample (1,Flash_read_error,FP2)
  Sample (1,Flash_write_error,FP2)
  Sample (1,Particle_limit_error,FP2)
  Sample (1,CS125Temp,FP2)
  Sample (1,CS125RH,FP2)
EndTable

'TwoMinute table (for wind)
DataTable (TwoMinute,1,-1)
  DataInterval (0,120,sec,10)
  WindVector (1,Wind_Speed_mph,Wind_Dir_deg,FP2,False,0,0,1)
EndTable

'Define Subroutines
Sub SnowVue
'SnowVue Sonic Ranging Sensor (SDI-12 Output) measurements DT, TCDT, & Snow_Depth_in:
  SDI12Recorder(SnowVue(),C7,0,"M1!",1,0)
  dist_raw_in = dist_raw_in*39.3701
  TCDT=dist_raw_in*SQR((((Air_Temp_f-32)/1.8)+273.15)/273.15)
  Snow_Depth_in=Snow_initial_dist_in-TCDT

  If Snow_Depth_in = Snow_initial_dist_in Then
    Snow_Depth_in = "NAN"
  EndIf
EndSub

Sub DSCParse
'Parse the DSC/DST111 Variables
  SplitStr (dstairtemp,dscraw,dstairtempfilter,1,4)
  SplitStr (dstrh,dscraw,dstrhfilter,1,4)
  SplitStr (dstdewpoint,dscraw,dstdewpointfilter,1,4)
  SplitStr (dstinputvolt,dscraw,dstinputvoltfilter,1,4)
  SplitStr (dstsurfacetemp,dscraw,dstsurfacetempfilter,1,4)
  SplitStr (dsthardwarestatus,dscraw,dsthardwarestatusfilter,1,4)
  SplitStr (dscsurfstatus,dscraw,dscsurfstatusfilter,1,4)
  SplitStr (dsclevelofgrip,dscraw,dsclevelofgripfilter,1,4)
  SplitStr (dschardwarestatus,dscraw,dschardwarestatusfilter,1,4)
  SplitStr (dscamtofwater,dscraw,dscamtofwaterfilter,1,4)
  SplitStr (dscamtofice,dscraw,dscamtoficefilter,1,4)
  SplitStr (dscamtofsnow,dscraw,dscamtofsnowfilter,1,4)
EndSub

Sub DSCconvert
'Convert the DSC111 and DST111 variables into English units
  dstAirTemp_F = dstairtemp*1.8+32
  dstDewPt_F = dstdewpoint*1.8+32
  dstRoadTemp_F = dstsurfacetemp*1.8+32
  If dscsurfstatus = 0 Then
    dscRoadStatus = "Error"

  'When there is a weather alert, the surface code becomes a 3-digit number so
  'we need to convert it to a single digit since there is no need for the alert

  ElseIf dscsurfstatus = 101 OR dscsurfstatus = 201 Then
    dscsurfstatus = 1

  ElseIf dscsurfstatus = 103 OR dscsurfstatus = 203 Then
    dscsurfstatus = 3

  ElseIf dscsurfstatus = 105 OR dscsurfstatus = 205 Then
    dscsurfstatus = 5

  ElseIf dscsurfstatus = 106 OR dscsurfstatus = 206 Then
    dscsurfstatus = 6

  ElseIf dscsurfstatus = 107 OR dscsurfstatus = 207 Then
    dscsurfstatus = 7

  ElseIf dscsurfstatus = 109 OR dscsurfstatus = 209 Then
    dscsurfstatus = 9
  EndIf

  If dscsurfstatus = "NAN" Then
    dscRoadstatus = "NAN"
  ElseIf dscsurfstatus = 1 Then
    dscRoadStatus = "Dry"
  ElseIf dscsurfstatus = 2 Then
    dscRoadStatus = "Damp"
  ElseIf dscsurfstatus = 3 Then
    dscRoadStatus = "Wet"
  ElseIf dscsurfstatus = 5 Then
    dscRoadStatus = "Frost"
  ElseIf dscsurfstatus = 6 Then
    dscRoadStatus = "Snow"
  ElseIf dscsurfstatus = 7 Then
    dscRoadStatus = "Ice"
  ElseIf dscsurfstatus = 9 Then
    dscRoadStatus = "Slush"
  EndIf
EndSub

Sub DSCOnOff
'Convert variables to NAN if there is no data
  If dscraw = "" Then
    dscpoll = "NAN"
    dstairtemp = "NAN"
    dstairtempfilter = "NAN"
    dstrh = "NAN"
    dstrhfilter = "NAN"
    dstdewpoint = "NAN"
    dstdewpointfilter = "NAN"
    dstinputvolt = "NAN"
    dstinputvoltfilter = "NAN"
    dstsurfacetemp = "NAN"
    dstsurfacetempfilter = "NAN"
    dsthardwarestatus = "NAN"
    dsthardwarestatusfilter = "NAN"
    dscsurfstatus = "NAN"
    dscsurfstatusfilter = "NAN"
    dsclevelofgrip = "NAN"
    dsclevelofgripfilter = "NAN"
    dschardwarestatus = "NAN"
    dschardwarestatusfilter = "NAN"
    dscamtofwater = "NAN"
    dscamtofwaterfilter = "NAN"
    dscamtofice = "NAN"
    dscamtoficefilter = "NAN"
    dscamtofsnow = "NAN"
    dscamtofsnowfilter = "NAN"
    dstAirTemp_F = "NAN"
    dstDewPt_F = "NAN"
    dstRoadTemp_F = "NAN"
    dscRoadStatus = "NAN"
  EndIf
EndSub

'Main Program
BeginProg
Scan (1,Sec,0,0)

  Battery (Batt_volt)

  'CC640
  If TimeIntoInterval (0,10,Min)
    PulsePort (C8,10000)
  EndIf

  '(Regular) Wind Speed & Direction Sensor measurements WS_ms and Wind_Dir_Deg:
  PulseCount (Wind_Speed_mph,1,P1,5,1,.2192,0)
  BrHalf (Wind_Dir_deg,1,mV5000,1,Vx1,1,2500,True,20000,_60Hz,355,0)
  If Wind_Dir_deg>=355 Then Wind_Dir_deg=0
  'Pull two minute values from the two minute table
  Two_Min_Wind_Speed_mph=TwoMinute.Wind_Speed_mph_WVc(1)
  Two_Min_Wind_Dir_deg=TwoMinute.Wind_Speed_mph_WVc(2)

  '107 - Sub Temperature Probe measurement 18in_Ground_Temp_F:
  Therm107(Ground_18in_Temp_f,1,2,Vx1,0,_60Hz,1.8,32.0)

  'LI200X Pyranometer measurement
  If solar_exist = 1
    VoltDiff (Solar_w,1,mV200,3,True,0,60,1,0)
    If Solar_w<0 Then Solar_w=0
    Solar_w=Solar_w*200
  Else
    Solar_w="NAN"
  EndIf

  'TE525 Tipping Bucket Rain Gauge
  If TE525_exist = 1
    PulseCount (Rain,1,P2,1,0,.01,0)
  Else
    Rain="NAN"
  EndIf

  'Call Output Tables
  CallTable MesoAtmo
  CallTable MesoRoad
  CallTable Daily
  CallTable TwoMinute
  CallTable PresentWx

NextScan

SlowSequence

Scan (10,Sec,0,0)

  'Call SnowVue Snow Depth Sensor
  Call SnowVue

  'DSC/DST Stuff
  dscpoll = CHR(13)+CHR(64)+CHR(55)+CHR(32)+CHR(77)+CHR(32)+CHR(49)+CHR(54)+CHR(13)  'Carrage return@7 M 16Carrage return
  'filter definitions
  dstairtempfilter=CHR(13)+CHR(10)+CHR(48)+CHR(49)  'return linefeed 0 1
  dstrhfilter=CHR(59)+CHR(48)+CHR(50)               ';02
  dstdewpointfilter=CHR(59)+CHR(48)+CHR(51)         ';03
  dstinputvoltfilter=CHR(59)+CHR(49)+CHR(52)        ';14
  dstsurfacetempfilter=CHR(59)+CHR(54)+CHR(48)      ';60
  dsthardwarestatusfilter=CHR(59)+CHR(54)+CHR(49)   ';61
  dscsurfstatusfilter=CHR(59)+CHR(54)+CHR(54)       ';66
  dsclevelofgripfilter=CHR(59)+CHR(54)+CHR(56)      ';68
  dschardwarestatusfilter=CHR(59)+CHR(13)+CHR(10)+CHR(55)+CHR(49)   ';71
  dscamtofwaterfilter=CHR(59)+CHR(55)+CHR(50)       ';72
  dscamtoficefilter=CHR(59)+CHR(55)+CHR(51)         ';73
  dscamtofsnowfilter=CHR(59)+CHR(55)+CHR(52)        ';74

  'DSC/DST instructions
  'opens the serial port
  SerialOpen (COMC5,9600,0,0,230,4)
  'send the poll command
  SerialOut (ComC5,dscpoll,"",0,90)
  'delay prior to measurement
  Delay (1,200,mSec)
  'retrieve the data
  SerialInBlock (ComC5,dscraw,227)
  SerialClose (ComC5)

  Call DSCparse
  Call DSCconvert
  Call DSCOnOff

  'CS125 Stuff
  'Setup datalogger port for binary communication
  SerialOpen(COMC1,38400,3,0,1000)
  TempString = "POLL:0:0"
  CheckVal = CheckSum (TempString,1,0)
  OutString = CHR(2) + TempString + ":" + FormatLong (CheckVal,"%04X") + ":" + CHR(3)+ CHR(13) + CHR(10)
  'Send get data command to cs125, then pause for 1 second
  SerialOut (COMC1,OutString,"",0,100)
  Delay (1,1,Sec)
  'Set up COMC1 to receive incoming serial data.
  SerialInRecord (ComC1,CS125_In,&h02,0,&H03,NBytesReturned,01)
  'Split out visibility parameters from string input
  SplitStr (cs125out(),CS125_In," ",25,5)
  visibility_m = vis_m_string
  visibility_m = visibility_m*2.19
  visibility_mi = visibility_m*0.000621371192

  If visibility_mi > 10 Then
    visibility_mi = 10
  EndIf

  If visibility_mi < 0.01 Then
    visibility_mi="NAN"
  EndIf

  If Intensity_mm_hr >= 0.3 OR SYNOPCode=51 OR SYNOPCode=61 OR SYNOPCode=71 OR SYNOPCode=72 Then
    Precip="Yes"
    If Intensity_mm_hr <3 Then
      Precip_Intensity="Light"
    ElseIf Intensity_mm_hr >= 10 Then
      Precip_Intensity="Heavy"
    Else
      Precip_Intensity="Moderate"
    EndIf
  Else
    Precip="No"
    Precip_Intensity=" "
  EndIf

  If CS125_In="NAN" Then
    Precip=" "
    Precip_Intensity=" "
  EndIf

  If visibility_mi < 0.5 AND Precip="No" Then
    Precip_Intensity = "Fog"
  EndIf

  'Determine snowfall rate
  If Precip="Yes" AND TwF < 34 AND visibility_mi < 10 Then
    SnowfallRate = 0.5 / visibility_mi
    If visibility_mi < 0.25 AND Particle_count <= 200 Then
      SnowfallRate = 2
    'ElseIf visibility_mi < 2 AND Particle_count <=50 Then
    '  SnowfallRate = 0
    '  Precip="No"
    '  Precip_Intensity="Fog"
    ElseIf SnowfallRate >= 5
      SnowfallRate = 5
    EndIf
  Else
    SnowfallRate = 0
  EndIF

  If visibility_mi="NAN" Then
    SnowfallRate = 0
  EndIf

  'Clear out COMC1 serial buffer
  SerialFlush (ComC1)
  SerialClose (ComC1)

NextScan

SlowSequence

Scan (1,Min,0,0)

  If Solar_w = 0 AND Batt_volt > 12
    SW12 (SW12_1,1)
    Light="On"
  Else
    SW12 (SW12_1,0)
    Light="Off"
  EndIf

NextScan
EndProg
